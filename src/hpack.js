const static_table = [
  [':authority', ''],
  [':method', 'GET'],
  [':method', 'POST'],
  [':path', '/'],
  [':path', '/index.html'],
  [':scheme', 'http'],
  [':scheme', 'https'],
  [':status', '200'],
  [':status', '204'],
  [':status', '206'],
  [':status', '304'],
  [':status', '400'],
  [':status', '404'],
  [':status', '500'],
  ['accept-charset', ''],
  ['accept-encoding', 'gzip, deflate'],
  ['accept-language', ''],
  ['accept-ranges', ''],
  ['accept', ''],
  ['access-control-allow-origin', ''],
  ['age', ''],
  ['allow', ''],
  ['authorization', ''],
  ['cache-control', ''],
  ['content-disposition', ''],
  ['content-encoding', ''],
  ['content-language', ''],
  ['content-length', ''],
  ['content-location', ''],
  ['content-range', ''],
  ['content-type', ''],
  ['cookie', ''],
  ['date', ''],
  ['etag', ''],
  ['expect', ''],
  ['expires', ''],
  ['from', ''],
  ['host', ''],
  ['if-match', ''],
  ['if-modified-since', ''],
  ['if-none-match', ''],
  ['if-range', ''],
  ['if-unmodified-since', ''],
  ['last-modified', ''],
  ['link', ''],
  ['location', ''],
  ['max-forwards', ''],
  ['proxy-authenticate', ''],
  ['proxy-authorization', ''],
  ['range', ''],
  ['referer', ''],
  ['refresh', ''],
  ['retry-after', ''],
  ['server', ''],
  ['set-cookie', ''],
  ['strict-transport-security', ''],
  ['transfer-encoding', ''],
  ['user-agent', ''],
  ['vary', ''],
  ['via', ''],
  ['www-authenticate', '']
]
const huffmann_table = [
  { code: 0x1ff8,     length: 13 },
  { code: 0x7fffd8,   length: 23 },
  { code: 0xfffffe2,  length: 28 },
  { code: 0xfffffe3,  length: 28 },
  { code: 0xfffffe4,  length: 28 },
  { code: 0xfffffe5,  length: 28 },
  { code: 0xfffffe6,  length: 28 },
  { code: 0xfffffe7,  length: 28 },
  { code: 0xfffffe8,  length: 28 },
  { code: 0xffffea,   length: 24 },
  { code: 0x3ffffffc, length: 30 },
  { code: 0xfffffe9,  length: 28 },
  { code: 0xfffffea,  length: 28 },
  { code: 0x3ffffffd, length: 30 },
  { code: 0xfffffeb,  length: 28 },
  { code: 0xfffffec,  length: 28 },
  { code: 0xfffffed,  length: 28 },
  { code: 0xfffffee,  length: 28 },
  { code: 0xfffffef,  length: 28 },
  { code: 0xffffff0,  length: 28 },
  { code: 0xffffff1,  length: 28 },
  { code: 0xffffff2,  length: 28 },
  { code: 0x3ffffffe, length: 30 },
  { code: 0xffffff3,  length: 28 },
  { code: 0xffffff4,  length: 28 },
  { code: 0xffffff5,  length: 28 },
  { code: 0xffffff6,  length: 28 },
  { code: 0xffffff7,  length: 28 },
  { code: 0xffffff8,  length: 28 },
  { code: 0xffffff9,  length: 28 },
  { code: 0xffffffa,  length: 28 },
  { code: 0xffffffb,  length: 28 },
  { code: 0x14,       length: 6  },
  { code: 0x3f8,      length: 10 },
  { code: 0x3f9,      length: 10 },
  { code: 0xffa,      length: 12 },
  { code: 0x1ff9,     length: 13 },
  { code: 0x15,       length: 6  },
  { code: 0xf8,       length: 8  },
  { code: 0x7fa,      length: 11 },
  { code: 0x3fa,      length: 10 },
  { code: 0x3fb,      length: 10 },
  { code: 0xf9,       length: 8  },
  { code: 0x7fb,      length: 11 },
  { code: 0xfa,       length: 8  },
  { code: 0x16,       length: 6  },
  { code: 0x17,       length: 6  },
  { code: 0x18,       length: 6  },
  { code: 0x0,        length: 5  },
  { code: 0x1,        length: 5  },
  { code: 0x2,        length: 5  },
  { code: 0x19,       length: 6  },
  { code: 0x1a,       length: 6  },
  { code: 0x1b,       length: 6  },
  { code: 0x1c,       length: 6  },
  { code: 0x1d,       length: 6  },
  { code: 0x1e,       length: 6  },
  { code: 0x1f,       length: 6  },
  { code: 0x5c,       length: 7  },
  { code: 0xfb,       length: 8  },
  { code: 0x7ffc,     length: 15 },
  { code: 0x20,       length: 6  },
  { code: 0xffb,      length: 12 },
  { code: 0x3fc,      length: 10 },
  { code: 0x1ffa,     length: 13 },
  { code: 0x21,       length: 6  },
  { code: 0x5d,       length: 7  },
  { code: 0x5e,       length: 7  },
  { code: 0x5f,       length: 7  },
  { code: 0x60,       length: 7  },
  { code: 0x61,       length: 7  },
  { code: 0x62,       length: 7  },
  { code: 0x63,       length: 7  },
  { code: 0x64,       length: 7  },
  { code: 0x65,       length: 7  },
  { code: 0x66,       length: 7  },
  { code: 0x67,       length: 7  },
  { code: 0x68,       length: 7  },
  { code: 0x69,       length: 7  },
  { code: 0x6a,       length: 7  },
  { code: 0x6b,       length: 7  },
  { code: 0x6c,       length: 7  },
  { code: 0x6d,       length: 7  },
  { code: 0x6e,       length: 7  },
  { code: 0x6f,       length: 7  },
  { code: 0x70,       length: 7  },
  { code: 0x71,       length: 7  },
  { code: 0x72,       length: 7  },
  { code: 0xfc,       length: 8  },
  { code: 0x73,       length: 7  },
  { code: 0xfd,       length: 8  },
  { code: 0x1ffb,     length: 13 },
  { code: 0x7fff0,    length: 19 },
  { code: 0x1ffc,     length: 13 },
  { code: 0x3ffc,     length: 14 },
  { code: 0x22,       length: 6  },
  { code: 0x7ffd,     length: 15 },
  { code: 0x3,        length: 5  },
  { code: 0x23,       length: 6  },
  { code: 0x4,        length: 5  },
  { code: 0x24,       length: 6  },
  { code: 0x5,        length: 5  },
  { code: 0x25,       length: 6  },
  { code: 0x26,       length: 6  },
  { code: 0x27,       length: 6  },
  { code: 0x6,        length: 5  },
  { code: 0x74,       length: 7  },
  { code: 0x75,       length: 7  },
  { code: 0x28,       length: 6  },
  { code: 0x29,       length: 6  },
  { code: 0x2a,       length: 6  },
  { code: 0x7,        length: 5  },
  { code: 0x2b,       length: 6  },
  { code: 0x76,       length: 7  },
  { code: 0x2c,       length: 6  },
  { code: 0x8,        length: 5  },
  { code: 0x9,        length: 5  },
  { code: 0x2d,       length: 6  },
  { code: 0x77,       length: 7  },
  { code: 0x78,       length: 7  },
  { code: 0x79,       length: 7  },
  { code: 0x7a,       length: 7  },
  { code: 0x7b,       length: 7  },
  { code: 0x7ffe,     length: 15 },
  { code: 0x7fc,      length: 11 },
  { code: 0x3ffd,     length: 14 },
  { code: 0x1ffd,     length: 13 },
  { code: 0xffffffc,  length: 28 },
  { code: 0xfffe6,    length: 20 },
  { code: 0x3fffd2,   length: 22 },
  { code: 0xfffe7,    length: 20 },
  { code: 0xfffe8,    length: 20 },
  { code: 0x3fffd3,   length: 22 },
  { code: 0x3fffd4,   length: 22 },
  { code: 0x3fffd5,   length: 22 },
  { code: 0x7fffd9,   length: 23 },
  { code: 0x3fffd6,   length: 22 },
  { code: 0x7fffda,   length: 23 },
  { code: 0x7fffdb,   length: 23 },
  { code: 0x7fffdc,   length: 23 },
  { code: 0x7fffdd,   length: 23 },
  { code: 0x7fffde,   length: 23 },
  { code: 0xffffeb,   length: 24 },
  { code: 0x7fffdf,   length: 23 },
  { code: 0xffffec,   length: 24 },
  { code: 0xffffed,   length: 24 },
  { code: 0x3fffd7,   length: 22 },
  { code: 0x7fffe0,   length: 23 },
  { code: 0xffffee,   length: 24 },
  { code: 0x7fffe1,   length: 23 },
  { code: 0x7fffe2,   length: 23 },
  { code: 0x7fffe3,   length: 23 },
  { code: 0x7fffe4,   length: 23 },
  { code: 0x1fffdc,   length: 21 },
  { code: 0x3fffd8,   length: 22 },
  { code: 0x7fffe5,   length: 23 },
  { code: 0x3fffd9,   length: 22 },
  { code: 0x7fffe6,   length: 23 },
  { code: 0x7fffe7,   length: 23 },
  { code: 0xffffef,   length: 24 },
  { code: 0x3fffda,   length: 22 },
  { code: 0x1fffdd,   length: 21 },
  { code: 0xfffe9,    length: 20 },
  { code: 0x3fffdb,   length: 22 },
  { code: 0x3fffdc,   length: 22 },
  { code: 0x7fffe8,   length: 23 },
  { code: 0x7fffe9,   length: 23 },
  { code: 0x1fffde,   length: 21 },
  { code: 0x7fffea,   length: 23 },
  { code: 0x3fffdd,   length: 22 },
  { code: 0x3fffde,   length: 22 },
  { code: 0xfffff0,   length: 24 },
  { code: 0x1fffdf,   length: 21 },
  { code: 0x3fffdf,   length: 22 },
  { code: 0x7fffeb,   length: 23 },
  { code: 0x7fffec,   length: 23 },
  { code: 0x1fffe0,   length: 21 },
  { code: 0x1fffe1,   length: 21 },
  { code: 0x3fffe0,   length: 22 },
  { code: 0x1fffe2,   length: 21 },
  { code: 0x7fffed,   length: 23 },
  { code: 0x3fffe1,   length: 22 },
  { code: 0x7fffee,   length: 23 },
  { code: 0x7fffef,   length: 23 },
  { code: 0xfffea,    length: 20 },
  { code: 0x3fffe2,   length: 22 },
  { code: 0x3fffe3,   length: 22 },
  { code: 0x3fffe4,   length: 22 },
  { code: 0x7ffff0,   length: 23 },
  { code: 0x3fffe5,   length: 22 },
  { code: 0x3fffe6,   length: 22 },
  { code: 0x7ffff1,   length: 23 },
  { code: 0x3ffffe0,  length: 26 },
  { code: 0x3ffffe1,  length: 26 },
  { code: 0xfffeb,    length: 20 },
  { code: 0x7fff1,    length: 19 },
  { code: 0x3fffe7,   length: 22 },
  { code: 0x7ffff2,   length: 23 },
  { code: 0x3fffe8,   length: 22 },
  { code: 0x1ffffec,  length: 25 },
  { code: 0x3ffffe2,  length: 26 },
  { code: 0x3ffffe3,  length: 26 },
  { code: 0x3ffffe4,  length: 26 },
  { code: 0x7ffffde,  length: 27 },
  { code: 0x7ffffdf,  length: 27 },
  { code: 0x3ffffe5,  length: 26 },
  { code: 0xfffff1,   length: 24 },
  { code: 0x1ffffed,  length: 25 },
  { code: 0x7fff2,    length: 19 },
  { code: 0x1fffe3,   length: 21 },
  { code: 0x3ffffe6,  length: 26 },
  { code: 0x7ffffe0,  length: 27 },
  { code: 0x7ffffe1,  length: 27 },
  { code: 0x3ffffe7,  length: 26 },
  { code: 0x7ffffe2,  length: 27 },
  { code: 0xfffff2,   length: 24 },
  { code: 0x1fffe4,   length: 21 },
  { code: 0x1fffe5,   length: 21 },
  { code: 0x3ffffe8,  length: 26 },
  { code: 0x3ffffe9,  length: 26 },
  { code: 0xffffffd,  length: 28 },
  { code: 0x7ffffe3,  length: 27 },
  { code: 0x7ffffe4,  length: 27 },
  { code: 0x7ffffe5,  length: 27 },
  { code: 0xfffec,    length: 20 },
  { code: 0xfffff3,   length: 24 },
  { code: 0xfffed,    length: 20 },
  { code: 0x1fffe6,   length: 21 },
  { code: 0x3fffe9,   length: 22 },
  { code: 0x1fffe7,   length: 21 },
  { code: 0x1fffe8,   length: 21 },
  { code: 0x7ffff3,   length: 23 },
  { code: 0x3fffea,   length: 22 },
  { code: 0x3fffeb,   length: 22 },
  { code: 0x1ffffee,  length: 25 },
  { code: 0x1ffffef,  length: 25 },
  { code: 0xfffff4,   length: 24 },
  { code: 0xfffff5,   length: 24 },
  { code: 0x3ffffea,  length: 26 },
  { code: 0x7ffff4,   length: 23 },
  { code: 0x3ffffeb,  length: 26 },
  { code: 0x7ffffe6,  length: 27 },
  { code: 0x3ffffec,  length: 26 },
  { code: 0x3ffffed,  length: 26 },
  { code: 0x7ffffe7,  length: 27 },
  { code: 0x7ffffe8,  length: 27 },
  { code: 0x7ffffe9,  length: 27 },
  { code: 0x7ffffea,  length: 27 },
  { code: 0x7ffffeb,  length: 27 },
  { code: 0xffffffe,  length: 28 },
  { code: 0x7ffffec,  length: 27 },
  { code: 0x7ffffed,  length: 27 },
  { code: 0x7ffffee,  length: 27 },
  { code: 0x7ffffef,  length: 27 },
  { code: 0x7fffff0,  length: 27 },
  { code: 0x3ffffee,  length: 26 },
  { code: 0x3fffffff, length: 30 }
];

export default class HuffmanTable {
  root;

  constructor(){
    this.root = [];
    this.genTree();
  }

  genTree(){
    for(let i = 0; i < huffmann_table.length; i ++){
      let node = this.root;
      let huffman = huffmann_table[i];
      for(let j = huffman.length-1; j >= 0; j--){
        let next = huffman.code & (0x1 << j) != 0;
        if(next){
          if(!node[1])
            node[1] = (j == 0 ? i : []);
        }
        else {
          if(!node[0])
            node[0] = (j == 0 ? i : []);
        }
        node = node[next ? 1 : 0];
      }
    }
  }
}
